<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/adminOrder.css">
    <link rel="stylesheet" type="text/css" href="/css/adminModal.css">
    <title>Admin Order</title>
</head>
<?php
include "sidebar.php";
require "../helperFile/Member_base.php";
?>
<?php
// Check if 'search' parameter is present in the URL
if (isset($_GET['search'])) {
    global  $search;
    global $orderIDModal;
    $orderIDModal = isset($_GET['orderID']) ? $_GET['orderID'] : null;
    if (!empty($orderIDModal)) {
        $recordsearch = $_db->prepare('
         SELECT * 
        FROM shipping_detail
         WHERE EXISTS (
        SELECT 1 FROM shipping_detail WHERE order_id = :order_id
            )
         ');
        $recordsearch->bindParam('order_id', $orderIDModal);
        $recordsearch->execute();

        $recordsearchExit = $recordsearch->fetch(PDO::FETCH_ASSOC);
    }
    // Get the value of the 'search' parameter
    $search = $_GET['search'];
    if ($search == 'all') {
        $stm = $_db->prepare('
          SELECT 
                orders.*, 
                users.user_name,
        shipping_detail.*, 
        return_refund.*,
        orders_detail.*, 
        product.product_name, 
        product.product_price, 
        product_img.product_IMG_source ,
        product_img.product_IMG_name,
        payment.*

    FROM orders
    LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
    LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
    LEFT JOIN product ON orders_detail.product_id = product.product_id
    LEFT JOIN return_refund ON orders.order_id = return_refund.order_id
    LEFT JOIN product_img ON product.product_id = product_img.product_id
    LEFT JOIN payment ON orders.order_id = payment.order_id
    LEFT JOIN users ON orders.user_id = users.user_id
ORDER BY orders.order_date DESC ;

');
    } else if ($search == 'toPay') {
        $stm = $_db->prepare('
          SELECT 
                orders.*, 
        shipping_detail.*, 
        users.user_name,
        orders_detail.*, 
        product.product_name, 
        product.product_price, 
        product_img.product_IMG_source ,
        product_img.product_IMG_name
    FROM orders
    LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
    LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
    LEFT JOIN product ON orders_detail.product_id = product.product_id
    LEFT JOIN product_img ON product.product_id = product_img.product_id
    LEFT JOIN users ON orders.user_id = users.user_id

    WHERE orders.order_status = "P" AND orders.order_id IN (
        SELECT orders.order_id
        FROM payment
        WHERE payment_status = "P" 
    )
    ORDER BY orders.order_date DESC
');
    } else if ($search == 'toShip') {
        $stm = $_db->prepare('
        SELECT 
              orders.*, 
      shipping_detail.*, 
                users.user_name,

      orders_detail.*, 
      product.product_name, 
      product.product_price, 
      product_img.product_IMG_source ,
        product_img.product_IMG_name
  FROM orders
  LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
  LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
  LEFT JOIN product ON orders_detail.product_id = product.product_id
  LEFT JOIN product_img ON product.product_id = product_img.product_id
    LEFT JOIN users ON orders.user_id = users.user_id

  WHERE orders.order_status = "S"
    AND (shipping_detail.shipping_status = "P" OR shipping_detail.shipping_status = "S")
    
  ORDER BY orders.order_date DESC
');
    } else if ($search == 'complete') {
        $stm = $_db->prepare('
        SELECT 
              orders.*, 
      shipping_detail.*, 
                users.user_name,

      orders_detail.*, 
      product.product_name, 
      product.product_price, 
      product_img.product_IMG_source ,
        product_img.product_IMG_name
  FROM orders
  LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
  LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
  LEFT JOIN product ON orders_detail.product_id = product.product_id
  LEFT JOIN product_img ON product.product_id = product_img.product_id
    LEFT JOIN users ON orders.user_id = users.user_id

  WHERE orders.order_status = "S" and shipping_detail.shipping_status = "R" AND NOT EXISTS (
      SELECT 1 
      FROM return_refund rr 
      WHERE rr.order_id = orders.order_id
  )
  ORDER BY orders.order_date DESC
');
    } else if ($search == 'cancelled') {
        $stm = $_db->prepare('
        SELECT 
              orders.*, 
      shipping_detail.*, 
                users.user_name,

      orders_detail.*, 
      product.product_name, 
      product.product_price, 
      product_img.product_IMG_source ,
        product_img.product_IMG_name
  FROM orders
  LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
  LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
  LEFT JOIN product ON orders_detail.product_id = product.product_id
  LEFT JOIN product_img ON product.product_id = product_img.product_id
    LEFT JOIN users ON orders.user_id = users.user_id

  WHERE orders.order_status = "C" 
  ORDER BY orders.order_date DESC
');
    } else if ($search == 'refund') {
        $stm = $_db->prepare('
      SELECT 
    orders.order_id, 
                users.user_name,

    orders.order_date, 
    shipping_detail.shipping_address, 
    return_refund.refund_status, 
    orders_detail.quantity, 
    product.product_name, 
    product.product_price, 
    product_img.product_IMG_source
FROM orders
LEFT JOIN shipping_detail ON orders.order_id = shipping_detail.order_id
LEFT JOIN orders_detail ON orders.order_id = orders_detail.order_id
LEFT JOIN product ON orders_detail.product_id = product.product_id
LEFT JOIN product_img ON product.product_id = product_img.product_id
LEFT JOIN return_refund ON orders.order_id = return_refund.order_id
    LEFT JOIN users ON orders.user_id = users.user_id

WHERE orders.order_status = "R"
ORDER BY orders.order_date;
');
    }
    $stm->execute();

    $result = $stm->fetchAll(PDO::FETCH_ASSOC);
} else {
    // If 'search' parameter is not found, output a message
    echo "No search parameter found in the URL.";
}
$orderStatus = [
    "C" => "Cancle",
    "P" => "Waiting Payment",
    "R" => "Retrun Refund"
];
$shippingStatus = [
    "P" => "Preparing Item",
    "S" => "Out Of Delived",
    "R" => "Completed"
];
$returnStatus = [
    "P" => "Process Return",
    "Y" => "Successful Retrun",
    "N" => "Unsuccessful"
];

$shippingCompanies = [
    'poslaju' => 'Pos Laju',
    'gdex' => 'GD Express (GDEX)'
];
global $_err;
$_err = []; 
function is_post()
{
    return $_SERVER['REQUEST_METHOD'] === 'POST';
}

if (is_post()) {
    $shippingCompaniesName =  $_POST['shippingCompany'];

    if ($shippingCompaniesName == '') {
        $_err['shippingMethod'] = 'Please select Shipping Companies Name';
    } else if (!array_key_exists($shippingCompaniesName, $shippingCompanies)) {
        $_err['shippingMethod'] = 'Please select Shipping Companies Name';
    }

    if (empty($_err)) {
        $updateShipping = $_db->prepare('
        UPDATE shipping_detail SET shipping_company = :shipping_company,shipping_status="S" WHERE order_id = :order_id
        ');

        $updateShipping->bindParam(':shipping_company', $shippingCompaniesName);
        $updateShipping->bindParam(':order_id', $orderIDModal);
        if ($updateShipping->execute()) {
            // Success alert with redirect
            echo "<script>alert('Shipping company updated successfully!'); window.location.href = 'http://localhost:8000/web/adminOrder.php?search=all';</script>";
        } else {
            // Failure alert with redirect
            echo "<script>alert('Failed to update shipping company.'); window.location.href = 'http://localhost:8000/web/adminOrder.php?search=all';</script>";
        }
    } else {
        // Alert if errors exist with redirect
        echo "<script>alert('" . addslashes($_err['shippingMethod']) . "'); window.location.href = 'http://localhost:8000/web/adminOrder.php?search=all';</script>";
    }
    

}
?>

<body>
    <div class="hisContainer" id="hisContainer">

        <input readonly type="hidden" value="<?= count($result) ?>" id="ordercount">
        <?php include 'admin_orderNav.php' ?>
        <div class="notthing" id="notthing">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="150px" height="150px" viewBox="0 0 150 150" version="1.1">
                <g id="surface1">
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(99.215686%,80%,49.019608%);fill-opacity:1;" d="M 30.992188 18.671875 C 31.386719 18.671875 31.785156 18.671875 32.179688 18.671875 C 33.257812 18.667969 34.335938 18.667969 35.417969 18.667969 C 36.582031 18.667969 37.75 18.667969 38.917969 18.664062 C 41.199219 18.660156 43.484375 18.660156 45.765625 18.660156 C 47.625 18.660156 49.480469 18.660156 51.335938 18.660156 C 51.601562 18.660156 51.867188 18.660156 52.140625 18.660156 C 52.679688 18.660156 53.214844 18.660156 53.753906 18.660156 C 58.796875 18.65625 63.835938 18.65625 68.878906 18.65625 C 73.480469 18.660156 78.085938 18.65625 82.691406 18.652344 C 87.425781 18.644531 92.160156 18.640625 96.894531 18.644531 C 99.550781 18.644531 102.207031 18.644531 104.863281 18.640625 C 107.125 18.636719 109.382812 18.636719 111.644531 18.640625 C 112.796875 18.640625 113.949219 18.640625 115.101562 18.636719 C 124.402344 18.609375 132.929688 19.84375 140.039062 26.367188 C 140.308594 26.613281 140.582031 26.863281 140.859375 27.117188 C 146.269531 32.277344 149.84375 39.515625 150.097656 47.039062 C 150.222656 56.59375 147.714844 64.175781 141.027344 71.191406 C 134.878906 77.160156 127.070312 79.734375 118.609375 79.730469 C 118.222656 79.730469 117.835938 79.730469 117.4375 79.730469 C 116.371094 79.734375 115.304688 79.734375 114.238281 79.734375 C 113.082031 79.734375 111.929688 79.738281 110.777344 79.738281 C 108.257812 79.742188 105.738281 79.746094 103.21875 79.746094 C 101.644531 79.746094 100.070312 79.75 98.496094 79.75 C 94.128906 79.753906 89.761719 79.757812 85.398438 79.757812 C 85.117188 79.757812 84.839844 79.757812 84.550781 79.757812 C 84.132812 79.757812 84.132812 79.757812 83.703125 79.757812 C 83.136719 79.757812 82.570312 79.757812 82.003906 79.757812 C 81.582031 79.757812 81.582031 79.757812 81.152344 79.757812 C 76.597656 79.757812 72.046875 79.765625 67.492188 79.769531 C 62.8125 79.777344 58.128906 79.78125 53.449219 79.78125 C 50.824219 79.78125 48.199219 79.785156 45.574219 79.789062 C 43.335938 79.792969 41.101562 79.796875 38.863281 79.792969 C 37.722656 79.792969 36.585938 79.792969 35.445312 79.796875 C 24.855469 79.832031 16.109375 77.996094 8.277344 70.515625 C 2.703125 64.738281 -0.128906 57.269531 -0.0898438 49.292969 C -0.0898438 48.929688 -0.0898438 48.566406 -0.0859375 48.191406 C 0.0234375 39.808594 3.445312 32.992188 9.210938 27.027344 C 15.117188 21.273438 22.851562 18.648438 30.992188 18.671875 Z M 30.992188 18.671875 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(20.784314%,13.72549%,43.137255%);fill-opacity:1;" d="M 30.992188 18.671875 C 31.386719 18.671875 31.785156 18.671875 32.179688 18.671875 C 33.257812 18.667969 34.335938 18.667969 35.417969 18.667969 C 36.582031 18.667969 37.75 18.667969 38.917969 18.664062 C 41.199219 18.660156 43.484375 18.660156 45.765625 18.660156 C 47.625 18.660156 49.480469 18.660156 51.335938 18.660156 C 51.601562 18.660156 51.867188 18.660156 52.140625 18.660156 C 52.679688 18.660156 53.214844 18.660156 53.753906 18.660156 C 58.796875 18.65625 63.835938 18.65625 68.878906 18.65625 C 73.480469 18.660156 78.085938 18.65625 82.691406 18.652344 C 87.425781 18.644531 92.160156 18.640625 96.894531 18.644531 C 99.550781 18.644531 102.207031 18.644531 104.863281 18.640625 C 107.125 18.636719 109.382812 18.636719 111.644531 18.640625 C 112.796875 18.640625 113.949219 18.640625 115.101562 18.636719 C 124.402344 18.609375 132.929688 19.84375 140.039062 26.367188 C 140.308594 26.613281 140.582031 26.863281 140.859375 27.117188 C 146.269531 32.277344 149.84375 39.515625 150.097656 47.039062 C 150.222656 56.59375 147.714844 64.175781 141.027344 71.191406 C 134.878906 77.160156 127.070312 79.734375 118.609375 79.730469 C 118.222656 79.730469 117.835938 79.730469 117.4375 79.730469 C 116.371094 79.734375 115.304688 79.734375 114.238281 79.734375 C 113.082031 79.734375 111.929688 79.738281 110.777344 79.738281 C 108.257812 79.742188 105.738281 79.746094 103.21875 79.746094 C 101.644531 79.746094 100.070312 79.75 98.496094 79.75 C 94.128906 79.753906 89.761719 79.757812 85.398438 79.757812 C 85.117188 79.757812 84.839844 79.757812 84.550781 79.757812 C 84.132812 79.757812 84.132812 79.757812 83.703125 79.757812 C 83.136719 79.757812 82.570312 79.757812 82.003906 79.757812 C 81.582031 79.757812 81.582031 79.757812 81.152344 79.757812 C 76.597656 79.757812 72.046875 79.765625 67.492188 79.769531 C 62.8125 79.777344 58.128906 79.78125 53.449219 79.78125 C 50.824219 79.78125 48.199219 79.785156 45.574219 79.789062 C 43.335938 79.792969 41.101562 79.796875 38.863281 79.792969 C 37.722656 79.792969 36.585938 79.792969 35.445312 79.796875 C 24.855469 79.832031 16.109375 77.996094 8.277344 70.515625 C 2.703125 64.738281 -0.128906 57.269531 -0.0898438 49.292969 C -0.0898438 48.929688 -0.0898438 48.566406 -0.0859375 48.191406 C 0.0234375 39.808594 3.445312 32.992188 9.210938 27.027344 C 15.117188 21.273438 22.851562 18.648438 30.992188 18.671875 Z M 11.277344 31.816406 C 6.636719 37.027344 4.316406 43.4375 4.582031 50.40625 C 4.996094 57.214844 8.050781 63.714844 13.039062 68.382812 C 16.925781 71.808594 22.515625 74.734375 27.769531 74.746094 C 28.28125 74.75 28.28125 74.75 28.800781 74.75 C 29.175781 74.75 29.546875 74.753906 29.933594 74.753906 C 30.332031 74.753906 30.734375 74.753906 31.136719 74.757812 C 32.238281 74.757812 33.339844 74.761719 34.445312 74.761719 C 35.632812 74.765625 36.824219 74.769531 38.011719 74.769531 C 40.886719 74.777344 43.757812 74.78125 46.632812 74.785156 C 47.445312 74.789062 48.257812 74.789062 49.070312 74.789062 C 54.117188 74.796875 59.164062 74.804688 64.210938 74.808594 C 65.378906 74.808594 66.550781 74.808594 67.71875 74.808594 C 68.152344 74.808594 68.152344 74.808594 68.597656 74.808594 C 73.296875 74.8125 78 74.824219 82.699219 74.835938 C 87.53125 74.847656 92.359375 74.855469 97.191406 74.855469 C 99.902344 74.859375 102.613281 74.859375 105.320312 74.871094 C 107.632812 74.878906 109.941406 74.882812 112.25 74.878906 C 113.425781 74.878906 114.605469 74.878906 115.78125 74.886719 C 122.476562 74.960938 122.476562 74.960938 128.90625 73.242188 C 129.167969 73.136719 129.429688 73.03125 129.699219 72.925781 C 130.277344 72.683594 130.824219 72.417969 131.378906 72.125 C 131.570312 72.027344 131.761719 71.929688 131.957031 71.828125 C 133.644531 70.929688 135.09375 69.820312 136.523438 68.554688 C 136.808594 68.324219 137.097656 68.097656 137.394531 67.859375 C 141.8125 64.179688 144.453125 57.992188 145.3125 52.441406 C 145.96875 45.144531 144.136719 38.460938 139.511719 32.757812 C 136.382812 29.046875 132.570312 26.582031 128.027344 24.902344 C 127.800781 24.816406 127.578125 24.730469 127.34375 24.640625 C 124.285156 23.527344 121.152344 23.351562 117.925781 23.359375 C 117.542969 23.359375 117.160156 23.359375 116.765625 23.359375 C 115.714844 23.355469 114.660156 23.355469 113.609375 23.355469 C 112.472656 23.355469 111.332031 23.355469 110.195312 23.351562 C 107.96875 23.347656 105.742188 23.347656 103.515625 23.347656 C 101.703125 23.347656 99.894531 23.347656 98.082031 23.347656 C 97.824219 23.347656 97.566406 23.347656 97.300781 23.347656 C 96.773438 23.347656 96.25 23.347656 95.722656 23.347656 C 90.808594 23.34375 85.890625 23.34375 80.972656 23.34375 C 76.484375 23.347656 71.992188 23.34375 67.503906 23.339844 C 62.882812 23.332031 58.265625 23.328125 53.644531 23.332031 C 51.054688 23.332031 48.464844 23.332031 45.875 23.328125 C 43.671875 23.324219 41.464844 23.324219 39.261719 23.328125 C 38.136719 23.328125 37.011719 23.328125 35.890625 23.324219 C 26.496094 23.296875 17.996094 24.664062 11.277344 31.816406 Z M 11.277344 31.816406 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(20%,13.333333%,42.745098%);fill-opacity:1;" d="M 110.921875 101.359375 C 111.902344 101.460938 112.882812 101.554688 113.863281 101.648438 C 114.492188 101.710938 115.121094 101.777344 115.75 101.839844 C 116.183594 101.882812 116.183594 101.882812 116.628906 101.921875 C 118.414062 102.113281 120.109375 102.34375 121.507812 103.574219 C 122.851562 105.386719 123.054688 106.730469 122.753906 108.984375 C 122.296875 109.90625 121.714844 110.597656 120.996094 111.328125 C 120.765625 111.570312 120.535156 111.8125 120.300781 112.058594 C 120.144531 112.207031 119.984375 112.351562 119.824219 112.5 C 120.269531 113.554688 120.890625 114.210938 121.707031 115.007812 C 122.09375 115.386719 122.09375 115.386719 122.488281 115.773438 C 123.027344 116.296875 123.570312 116.824219 124.113281 117.351562 C 127.515625 120.695312 127.515625 120.695312 127.714844 122.570312 C 127.757812 122.875 127.757812 122.875 127.796875 123.183594 C 127.601562 125.503906 126.476562 126.871094 124.859375 128.410156 C 124.59375 128.679688 124.59375 128.679688 124.324219 128.949219 C 122.980469 130.261719 121.648438 131.382812 119.679688 131.359375 C 119.363281 131.363281 119.363281 131.363281 119.046875 131.367188 C 117.28125 131.066406 116.097656 129.992188 114.890625 128.746094 C 114.738281 128.59375 114.585938 128.4375 114.425781 128.277344 C 113.941406 127.789062 113.457031 127.292969 112.976562 126.800781 C 112.644531 126.464844 112.316406 126.128906 111.984375 125.796875 C 111.175781 124.980469 110.371094 124.160156 109.570312 123.339844 C 108.652344 123.777344 107.992188 124.253906 107.246094 124.949219 C 106.046875 126.015625 105.226562 126.488281 103.621094 126.671875 C 101.941406 126.5 100.738281 125.890625 99.5 124.75 C 98.324219 122.714844 98.273438 120.152344 98.050781 117.855469 C 98 117.375 98 117.375 97.953125 116.882812 C 97.882812 116.203125 97.816406 115.527344 97.75 114.851562 C 97.652344 113.820312 97.542969 112.792969 97.4375 111.761719 C 97.375 111.101562 97.308594 110.441406 97.242188 109.78125 C 97.210938 109.476562 97.179688 109.171875 97.148438 108.855469 C 96.945312 106.714844 96.753906 104.660156 97.796875 102.722656 C 100.726562 99.207031 106.886719 100.941406 110.921875 101.359375 Z M 110.921875 101.359375 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(21.176471%,14.509804%,43.137255%);fill-opacity:1;" d="M 40.226562 38.910156 C 42.945312 41.121094 45.269531 43.851562 45.703125 47.460938 C 46.0625 51.03125 45.027344 54.347656 42.773438 57.128906 C 42.625 57.3125 42.480469 57.496094 42.328125 57.683594 C 40.25 60.003906 37.117188 61.351562 34.042969 61.585938 C 30.332031 61.703125 27.382812 60.539062 24.597656 58.0625 C 21.871094 55.179688 20.933594 51.878906 21.011719 48.003906 C 21.242188 44.78125 22.933594 41.925781 25.285156 39.753906 C 29.910156 36.09375 35.171875 36.144531 40.226562 38.910156 Z M 40.226562 38.910156 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(21.176471%,14.117647%,43.137255%);fill-opacity:1;" d="M 74.691406 36.738281 C 74.964844 36.742188 75.238281 36.742188 75.519531 36.742188 C 75.800781 36.75 76.082031 36.757812 76.375 36.765625 C 76.648438 36.765625 76.925781 36.765625 77.210938 36.765625 C 80.832031 36.816406 83.980469 38.019531 86.644531 40.503906 C 89.449219 43.492188 90.117188 46.539062 90.03125 50.492188 C 89.957031 52.113281 89.59375 53.386719 88.769531 54.785156 C 88.640625 55.011719 88.515625 55.238281 88.382812 55.472656 C 86.566406 58.445312 83.972656 60.261719 80.660156 61.261719 C 79.246094 61.597656 77.859375 61.632812 76.410156 61.632812 C 76.152344 61.640625 75.898438 61.648438 75.632812 61.65625 C 74.390625 61.660156 73.71875 61.636719 72.640625 60.96875 C 71.65625 59.90625 71.734375 59.1875 71.722656 57.757812 C 71.71875 57.554688 71.714844 57.347656 71.714844 57.132812 C 71.707031 56.449219 71.703125 55.765625 71.695312 55.082031 C 71.695312 54.847656 71.695312 54.613281 71.691406 54.375 C 71.683594 53.136719 71.679688 51.902344 71.675781 50.664062 C 71.667969 49.386719 71.65625 48.109375 71.640625 46.835938 C 71.632812 45.851562 71.628906 44.871094 71.628906 43.886719 C 71.625 43.417969 71.621094 42.945312 71.613281 42.476562 C 71.605469 41.816406 71.605469 41.160156 71.605469 40.5 C 71.605469 40.125 71.601562 39.75 71.597656 39.363281 C 71.910156 37.652344 72.960938 36.726562 74.691406 36.738281 Z M 74.691406 36.738281 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(21.176471%,14.509804%,43.137255%);fill-opacity:1;" d="M 53.359375 36.691406 C 53.558594 36.691406 53.757812 36.6875 53.964844 36.6875 C 54.382812 36.6875 54.804688 36.691406 55.222656 36.699219 C 55.859375 36.710938 56.492188 36.707031 57.125 36.699219 C 59.925781 36.699219 62.097656 37.128906 64.289062 38.984375 C 64.515625 39.265625 64.515625 39.265625 64.746094 39.550781 C 64.902344 39.738281 65.058594 39.925781 65.222656 40.117188 C 66.496094 42.027344 66.449219 44.0625 66.210938 46.289062 C 65.5625 48.285156 64.273438 49.386719 62.695312 50.683594 C 63.117188 51.574219 63.539062 52.464844 63.957031 53.355469 C 64.078125 53.609375 64.195312 53.859375 64.316406 54.117188 C 64.433594 54.363281 64.550781 54.609375 64.667969 54.859375 C 64.78125 55.101562 64.894531 55.339844 65.011719 55.585938 C 65.28125 56.144531 65.5625 56.695312 65.847656 57.246094 C 66.332031 58.265625 66.375 58.941406 66.210938 60.058594 C 65.605469 60.9375 65.605469 60.9375 64.746094 61.523438 C 63.703125 61.558594 63.703125 61.558594 62.695312 61.230469 C 61.78125 60.238281 61.175781 59.179688 60.574219 57.976562 C 60.40625 57.640625 60.238281 57.304688 60.066406 56.957031 C 59.980469 56.785156 59.894531 56.613281 59.808594 56.433594 C 59.542969 55.898438 59.277344 55.367188 59.011719 54.835938 C 57.714844 52.226562 57.714844 52.226562 57.714844 51.5625 C 56.652344 51.5625 55.585938 51.5625 54.492188 51.5625 C 54.5 51.8125 54.507812 52.0625 54.515625 52.320312 C 54.539062 53.25 54.558594 54.179688 54.574219 55.113281 C 54.578125 55.515625 54.589844 55.917969 54.601562 56.316406 C 54.621094 56.898438 54.628906 57.476562 54.636719 58.058594 C 54.644531 58.40625 54.652344 58.753906 54.660156 59.113281 C 54.441406 60.339844 54 60.769531 53.027344 61.523438 C 51.984375 61.558594 51.984375 61.558594 50.976562 61.230469 C 50.152344 60.429688 49.832031 59.945312 49.652344 58.800781 C 49.652344 58.433594 49.648438 58.066406 49.648438 57.691406 C 49.644531 57.488281 49.644531 57.285156 49.640625 57.074219 C 49.632812 56.40625 49.636719 55.738281 49.640625 55.070312 C 49.636719 54.601562 49.636719 54.136719 49.632812 53.671875 C 49.628906 52.691406 49.632812 51.714844 49.636719 50.738281 C 49.640625 49.488281 49.632812 48.242188 49.625 46.992188 C 49.617188 46.027344 49.617188 45.066406 49.621094 44.101562 C 49.621094 43.640625 49.617188 43.179688 49.613281 42.71875 C 49.609375 42.074219 49.613281 41.429688 49.621094 40.785156 C 49.621094 40.417969 49.621094 40.050781 49.621094 39.675781 C 50.011719 37.546875 51.207031 36.691406 53.359375 36.691406 Z M 53.359375 36.691406 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(20.784314%,13.72549%,43.137255%);fill-opacity:1;" d="M 116 36.730469 C 116.195312 36.730469 116.386719 36.726562 116.585938 36.726562 C 116.996094 36.726562 117.402344 36.730469 117.8125 36.738281 C 118.425781 36.75 119.042969 36.746094 119.660156 36.738281 C 122.433594 36.742188 124.328125 37.199219 126.636719 38.707031 C 128.066406 40.203125 128.980469 41.863281 129.054688 43.964844 C 128.917969 46.292969 128.238281 48.167969 126.5625 49.804688 C 126.082031 50.015625 125.59375 50.210938 125.097656 50.390625 C 125.621094 51.488281 126.148438 52.589844 126.671875 53.6875 C 126.820312 54 126.96875 54.308594 127.125 54.628906 C 127.339844 55.082031 127.339844 55.082031 127.558594 55.539062 C 127.691406 55.816406 127.820312 56.09375 127.957031 56.378906 C 128.179688 56.839844 128.414062 57.300781 128.664062 57.75 C 129.066406 58.664062 128.835938 59.40625 128.613281 60.351562 C 128.109375 61.191406 127.703125 61.238281 126.746094 61.523438 C 125.683594 61.523438 125.683594 61.523438 124.945312 60.910156 C 124.179688 60.011719 123.75 59.210938 123.28125 58.132812 C 123.113281 57.761719 122.945312 57.394531 122.773438 57.027344 C 122.515625 56.453125 122.257812 55.878906 122.011719 55.300781 C 121.132812 53.007812 121.132812 53.007812 119.332031 51.539062 C 118.585938 51.464844 117.929688 51.460938 117.1875 51.5625 C 117.191406 51.804688 117.195312 52.046875 117.195312 52.296875 C 117.207031 53.394531 117.214844 54.492188 117.222656 55.589844 C 117.230469 55.972656 117.234375 56.355469 117.238281 56.746094 C 117.242188 57.113281 117.242188 57.480469 117.246094 57.855469 C 117.246094 58.195312 117.25 58.53125 117.253906 58.878906 C 117.1875 59.746094 117.074219 60.21875 116.601562 60.9375 C 115.734375 61.535156 115.003906 61.679688 113.964844 61.523438 C 113.308594 60.976562 112.882812 60.53125 112.5 59.765625 C 112.464844 59.097656 112.449219 58.429688 112.445312 57.757812 C 112.441406 57.554688 112.4375 57.347656 112.4375 57.132812 C 112.429688 56.449219 112.425781 55.765625 112.417969 55.082031 C 112.417969 54.847656 112.417969 54.613281 112.414062 54.375 C 112.40625 53.136719 112.402344 51.902344 112.398438 50.664062 C 112.390625 49.386719 112.378906 48.109375 112.363281 46.835938 C 112.355469 45.851562 112.351562 44.871094 112.351562 43.886719 C 112.347656 43.417969 112.34375 42.945312 112.335938 42.476562 C 112.328125 41.816406 112.328125 41.160156 112.328125 40.5 C 112.328125 40.125 112.324219 39.75 112.320312 39.363281 C 112.703125 37.265625 114.027344 36.730469 116 36.730469 Z M 116 36.730469 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(20.784314%,13.72549%,43.137255%);fill-opacity:1;" d="M 98.261719 36.730469 C 98.5 36.730469 98.734375 36.726562 98.976562 36.726562 C 99.472656 36.726562 99.964844 36.730469 100.460938 36.738281 C 101.21875 36.75 101.972656 36.746094 102.730469 36.738281 C 103.210938 36.742188 103.695312 36.746094 104.179688 36.75 C 104.402344 36.746094 104.628906 36.746094 104.859375 36.742188 C 106.3125 36.777344 107.089844 37.035156 108.105469 38.085938 C 108.300781 38.671875 108.300781 38.671875 108.289062 39.257812 C 108.292969 39.453125 108.296875 39.644531 108.300781 39.84375 C 107.996094 40.757812 107.429688 41.074219 106.640625 41.601562 C 105.773438 41.734375 105.773438 41.734375 104.832031 41.714844 C 104.492188 41.710938 104.152344 41.707031 103.804688 41.703125 C 103.453125 41.695312 103.101562 41.683594 102.742188 41.675781 C 102.207031 41.667969 102.207031 41.667969 101.660156 41.660156 C 100.78125 41.644531 99.902344 41.625 99.023438 41.601562 C 99.023438 43.34375 99.023438 45.082031 99.023438 46.875 C 99.554688 46.863281 100.089844 46.847656 100.636719 46.832031 C 101.339844 46.824219 102.039062 46.8125 102.742188 46.800781 C 103.089844 46.792969 103.441406 46.78125 103.804688 46.773438 C 104.144531 46.769531 104.480469 46.765625 104.832031 46.761719 C 105.296875 46.75 105.296875 46.75 105.773438 46.742188 C 106.851562 46.90625 107.332031 47.292969 108.105469 48.046875 C 108.300781 48.632812 108.300781 48.632812 108.289062 49.21875 C 108.292969 49.414062 108.296875 49.605469 108.300781 49.804688 C 107.996094 50.71875 107.429688 51.035156 106.640625 51.5625 C 105.773438 51.695312 105.773438 51.695312 104.832031 51.675781 C 104.492188 51.671875 104.152344 51.667969 103.804688 51.664062 C 103.453125 51.65625 103.101562 51.644531 102.742188 51.636719 C 102.382812 51.628906 102.027344 51.625 101.660156 51.621094 C 100.78125 51.605469 99.902344 51.585938 99.023438 51.5625 C 99.023438 53.304688 99.023438 55.042969 99.023438 56.835938 C 99.859375 56.816406 99.859375 56.816406 100.710938 56.792969 C 101.445312 56.785156 102.175781 56.773438 102.90625 56.761719 C 103.273438 56.753906 103.640625 56.742188 104.019531 56.734375 C 104.371094 56.730469 104.726562 56.726562 105.089844 56.722656 C 105.414062 56.714844 105.738281 56.710938 106.074219 56.703125 C 107.125 56.867188 107.457031 57.179688 108.105469 58.007812 C 108.269531 58.59375 108.269531 58.59375 108.269531 59.179688 C 108.277344 59.375 108.28125 59.566406 108.289062 59.765625 C 107.992188 60.707031 107.460938 61 106.640625 61.523438 C 105.78125 61.640625 105.035156 61.695312 104.179688 61.6875 C 103.941406 61.691406 103.707031 61.691406 103.464844 61.695312 C 102.96875 61.695312 102.476562 61.695312 101.980469 61.691406 C 101.222656 61.6875 100.46875 61.699219 99.710938 61.710938 C 99.230469 61.710938 98.746094 61.710938 98.261719 61.707031 C 98.039062 61.710938 97.8125 61.714844 97.582031 61.71875 C 96.480469 61.699219 95.890625 61.59375 95.007812 60.914062 C 94.164062 59.839844 94.152344 59.277344 94.144531 57.925781 C 94.144531 57.714844 94.140625 57.507812 94.136719 57.292969 C 94.132812 56.601562 94.136719 55.914062 94.140625 55.226562 C 94.140625 54.746094 94.140625 54.265625 94.136719 53.785156 C 94.136719 52.777344 94.136719 51.773438 94.144531 50.765625 C 94.152344 49.476562 94.148438 48.191406 94.140625 46.902344 C 94.132812 45.910156 94.136719 44.917969 94.140625 43.929688 C 94.140625 43.453125 94.140625 42.980469 94.136719 42.503906 C 94.132812 41.839844 94.136719 41.175781 94.144531 40.511719 C 94.148438 40.132812 94.148438 39.757812 94.148438 39.367188 C 94.585938 37.058594 96.171875 36.695312 98.261719 36.730469 Z M 98.261719 36.730469 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(98.823529%,46.27451%,48.627451%);fill-opacity:1;" d="M 101.953125 105.761719 C 105.335938 105.648438 108.648438 106 112.003906 106.347656 C 112.566406 106.402344 113.128906 106.460938 113.691406 106.515625 C 115.050781 106.652344 116.414062 106.792969 117.773438 106.933594 C 117.238281 108.097656 116.472656 108.878906 115.558594 109.753906 C 114.191406 111.003906 114.191406 111.003906 113.523438 112.683594 C 113.917969 115.328125 117.503906 117.828125 119.367188 119.679688 C 119.695312 120.003906 120.023438 120.332031 120.355469 120.660156 C 121.152344 121.457031 121.953125 122.253906 122.753906 123.046875 C 122.476562 123.375 122.195312 123.699219 121.917969 124.027344 C 121.761719 124.210938 121.609375 124.390625 121.449219 124.578125 C 120.933594 125.171875 120.390625 125.726562 119.824219 126.269531 C 118.539062 125.785156 117.742188 124.8125 116.816406 123.84375 C 116.453125 123.472656 116.09375 123.101562 115.734375 122.730469 C 115.167969 122.148438 114.605469 121.5625 114.042969 120.976562 C 113.5 120.40625 112.953125 119.84375 112.402344 119.28125 C 112.238281 119.105469 112.074219 118.929688 111.902344 118.75 C 110.800781 117.632812 110.035156 117.210938 108.398438 117.1875 C 107.742188 117.5 107.742188 117.5 107.246094 118.046875 C 107.050781 118.234375 106.859375 118.421875 106.660156 118.617188 C 106.460938 118.820312 106.261719 119.027344 106.054688 119.238281 C 105.621094 119.671875 105.1875 120.105469 104.753906 120.539062 C 104.464844 120.835938 104.464844 120.835938 104.167969 121.140625 C 103.710938 121.582031 103.710938 121.582031 103.417969 121.582031 C 103.035156 118.550781 102.714844 115.515625 102.417969 112.472656 C 102.375 112.066406 102.335938 111.65625 102.296875 111.25 C 102.238281 110.667969 102.179688 110.085938 102.125 109.503906 C 102.089844 109.164062 102.058594 108.824219 102.023438 108.472656 C 101.957031 107.566406 101.941406 106.671875 101.953125 105.761719 Z M 101.953125 105.761719 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(98.823529%,79.215686%,49.019608%);fill-opacity:1;" d="M 36.914062 42.425781 C 38.761719 43.523438 40.042969 44.824219 40.722656 46.875 C 41.046875 49.265625 40.972656 51.476562 39.730469 53.589844 C 38.371094 55.34375 36.332031 56.632812 34.121094 56.9375 C 31.734375 57.066406 29.898438 56.417969 28.101562 54.835938 C 26.484375 53.113281 25.765625 51.460938 25.632812 49.109375 C 25.703125 47.054688 26.421875 45.449219 27.792969 43.921875 C 30.449219 41.457031 33.621094 40.734375 36.914062 42.425781 Z M 36.914062 42.425781 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(98.431373%,78.823529%,49.019608%);fill-opacity:1;" d="M 76.464844 41.601562 C 79.394531 41.601562 81.371094 41.863281 83.503906 43.9375 C 85.207031 46.097656 85.53125 48.269531 85.253906 50.976562 C 84.683594 53.195312 83.339844 54.839844 81.414062 56.050781 C 79.601562 56.96875 78.65625 56.835938 76.464844 56.835938 C 76.464844 51.808594 76.464844 46.78125 76.464844 41.601562 Z M 76.464844 41.601562 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(19.607843%,12.941176%,42.352941%);fill-opacity:1;" d="M 88.585938 104.773438 C 88.867188 104.761719 89.148438 104.75 89.4375 104.738281 C 91.507812 104.714844 91.507812 104.714844 92.46875 105.558594 C 92.996094 106.59375 93.039062 107.253906 92.871094 108.398438 C 92.222656 109.25 91.839844 109.523438 90.820312 109.863281 C 90.046875 109.90625 89.285156 109.929688 88.511719 109.9375 C 88.304688 109.941406 88.097656 109.949219 87.886719 109.953125 C 86.558594 109.964844 85.714844 109.816406 84.667969 108.984375 C 84.214844 108.15625 83.988281 107.605469 84.222656 106.667969 C 85.117188 104.445312 86.453125 104.804688 88.585938 104.773438 Z M 88.585938 104.773438 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(19.607843%,12.941176%,42.745098%);fill-opacity:1;" d="M 91.609375 92.726562 C 92.894531 92.757812 93.53125 93.226562 94.429688 94.109375 C 94.59375 94.28125 94.753906 94.453125 94.921875 94.628906 C 95.179688 94.871094 95.179688 94.871094 95.441406 95.121094 C 96.324219 96.023438 96.789062 96.644531 96.808594 97.933594 C 96.617188 99.535156 96.617188 99.535156 95.800781 100.195312 C 94.71875 100.496094 94.070312 100.648438 93.046875 100.136719 C 92.203125 99.550781 91.484375 98.917969 90.746094 98.199219 C 90.492188 97.957031 90.238281 97.710938 89.972656 97.460938 C 89.273438 96.574219 89.109375 96.042969 89.0625 94.921875 C 89.691406 93.605469 90.121094 92.925781 91.609375 92.726562 Z M 91.609375 92.726562 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(19.607843%,13.333333%,42.745098%);fill-opacity:1;" d="M 104.589844 87.890625 C 105.441406 88.492188 105.972656 88.960938 106.191406 90.007812 C 106.242188 90.777344 106.238281 91.53125 106.21875 92.304688 C 106.222656 92.566406 106.226562 92.828125 106.230469 93.101562 C 106.207031 95.007812 106.207031 95.007812 105.503906 95.964844 C 104.769531 96.464844 104.304688 96.636719 103.417969 96.679688 C 102.488281 96.457031 102.074219 96.242188 101.476562 95.492188 C 100.9375 94.339844 100.957031 93.375 100.984375 92.121094 C 100.980469 91.898438 100.980469 91.679688 100.980469 91.449219 C 101 89.378906 101 89.378906 101.660156 88.476562 C 102.757812 87.742188 103.289062 87.734375 104.589844 87.890625 Z M 104.589844 87.890625 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(97.254902%,78.039216%,49.019608%);fill-opacity:1;" d="M 54.492188 41.601562 C 55.324219 41.570312 56.160156 41.542969 57.019531 41.511719 C 57.40625 41.488281 57.40625 41.488281 57.804688 41.46875 C 59.011719 41.449219 59.832031 41.511719 60.804688 42.265625 C 61.753906 43.324219 61.753906 43.324219 61.707031 44.257812 C 61.507812 45.496094 61.34375 45.851562 60.351562 46.582031 C 59.679688 46.917969 59.300781 46.910156 58.554688 46.902344 C 58.34375 46.902344 58.128906 46.902344 57.910156 46.902344 C 57.640625 46.898438 57.371094 46.894531 57.09375 46.894531 C 56.234375 46.886719 55.375 46.882812 54.492188 46.875 C 54.492188 45.132812 54.492188 43.394531 54.492188 41.601562 Z M 54.492188 41.601562 " />
                    <path style=" stroke:none;fill-rule:nonzero;fill:rgb(98.431373%,79.215686%,49.019608%);fill-opacity:1;" d="M 117.1875 41.601562 C 118.027344 41.578125 118.867188 41.554688 119.734375 41.527344 C 119.996094 41.519531 120.257812 41.507812 120.527344 41.496094 C 121.695312 41.480469 122.320312 41.515625 123.34375 42.128906 C 124.148438 43.019531 124.21875 43.636719 124.21875 44.824219 C 123.878906 45.632812 123.59375 46.105469 122.882812 46.621094 C 121.796875 47.007812 120.746094 46.9375 119.605469 46.910156 C 118.40625 46.894531 118.40625 46.894531 117.1875 46.875 C 117.1875 45.132812 117.1875 43.394531 117.1875 41.601562 Z M 117.1875 41.601562 " />
                </g>
            </svg>

            <p>No orders yet</p>
        </div>
        <?php
        $orderDetails = []; // Initialize an empty array to hold grouped order details

        // Group products by order_id
        foreach ($result as $order) {
            // Check if the order_id is already a key in the orderDetails array
            if (!isset($orderDetails[$order['order_id']])) {

                if (isset($order['returnStatus'])) {
                    $orderDetails[$order['order_id']] = [
                        'user_id' => $order['user_id'],
                        'user_name' => $order['user_name'],
                        'shipping_status' => $order['shipping_status'], // Store shipping status
                        'order_status' => $order['order_status'],
                        'returnStatus' => $order['returnStatus'],
                        'order_date' => $order['order_date'], // Store order date
                        'products' => []
                    ];
                } else {
                    $orderDetails[$order['order_id']] = [
                        'user_id' => $order['user_id'],
                        'user_name' => $order['user_name'],
                        'shipping_status' => $order['shipping_status'], // Store shipping status
                        'shipping_company' => $order['shipping_company'],
                        'order_status' => $order['order_status'],
                        'order_date' => $order['order_date'], // Store order date
                        'products' => []
                    ];
                }
            }

            // Add the product details to the products array for this order_id
            if (!empty($order['product_name'])) {
                $orderDetails[$order['order_id']]['products'][] = [
                    'product_name' => $order['product_name'],
                    'product_quantity' => $order['product_quantity'],
                    'product_price' => $order['product_price'],
                    'product_IMG_source' => $order['product_IMG_source'],
                    'product_IMG_name' => $order['product_IMG_name'],

                ];
            }
        }

        // Now print the grouped orders and their products
        foreach ($orderDetails as $orderId => $orderInfo): ?>
            <div class="deliverHis" id="deliverHis">
                <div class="deliverDetail ">
                    <?php if ($orderInfo['shipping_status'] == "R" && !isset($orderInfo['returnStatus'])) {  ?>
                        <a><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                                <path d="M48 0C21.5 0 0 21.5 0 48L0 368c0 26.5 21.5 48 48 48l16 0c0 53 43 96 96 96s96-43 96-96l128 0c0 53 43 96 96 96s96-43 96-96l32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l0-64 0-32 0-18.7c0-17-6.7-33.3-18.7-45.3L512 114.7c-12-12-28.3-18.7-45.3-18.7L416 96l0-48c0-26.5-21.5-48-48-48L48 0zM416 160l50.7 0L544 237.3l0 18.7-128 0 0-96zM112 416a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm368-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                            </svg> Parcel has been delivered </a>
                    <?php } else if (isset($orderInfo['returnStatus'])) {  ?>
                        <a> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                                <path d="M48 0C21.5 0 0 21.5 0 48L0 368c0 26.5 21.5 48 48 48l16 0c0 53 43 96 96 96s96-43 96-96l128 0c0 53 43 96 96 96s96-43 96-96l32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l0-64 0-32 0-18.7c0-17-6.7-33.3-18.7-45.3L512 114.7c-12-12-28.3-18.7-45.3-18.7L416 96l0-48c0-26.5-21.5-48-48-48L48 0zM416 160l50.7 0L544 237.3l0 18.7-128 0 0-96zM112 416a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm368-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                            </svg> Parcel has been delivered </a>
                    <?php } else { ?>
                        <a><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                                <path d="M48 0C21.5 0 0 21.5 0 48L0 368c0 26.5 21.5 48 48 48l16 0c0 53 43 96 96 96s96-43 96-96l128 0c0 53 43 96 96 96s96-43 96-96l32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l0-64 0-32 0-18.7c0-17-6.7-33.3-18.7-45.3L512 114.7c-12-12-28.3-18.7-45.3-18.7L416 96l0-48c0-26.5-21.5-48-48-48L48 0zM416 160l50.7 0L544 237.3l0 18.7-128 0 0-96zM112 416a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm368-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                            </svg> Order Status Shipping BY : <?= $orderInfo['shipping_company']?></a>
                    <?php } ?>
                </div>
                <div class="deliverState">
                    <?php if ($orderInfo['order_status'] == "S" && !isset($orderInfo['returnStatus'])) {
                        echo '<p class="openmodal" style="cursor:pointer"><a href="?search=' . $search . '&orderID=' . $orderId . '">' . $shippingStatus[$orderInfo['shipping_status']] . '</a></p>';
                    } else if (isset($orderInfo['returnStatus'])) {
                        echo '<p>' . $returnStatus[$orderInfo['returnStatus']] . '</p>';
                    } else {
                        echo '<p>' . $orderStatus[$orderInfo['order_status']] . '</p>';
                    } ?>
                </div>
            </div>

            <div class="productDetail">
                <?php
                // calculate total for this order
                $total = 0;
                $products = $orderInfo['products']; // Get all products for this order
                $numProducts = count($products); // Total number of products

                foreach ($products as $index => $product): ?>
                    <div class="product">
                        <div class="productIMg">
                            <img src="../image/<?= $product['product_IMG_source'] ?>" alt="<?= $product['product_IMG_name'] ?>">
                        </div>
                        <div class="productName">
                            <textarea readonly rows="1"><?= $product['product_name'] ?></textarea>
                        </div>
                        <div class="quantity">
                            <input readonly type="text" value="<?= $product['product_quantity'] ?>" placeholder="quantity">
                        </div>
                        <div class="productPrice">
                            <input readonly type="text" value="RM <?= $product['product_price'] ?>" placeholder="price">
                        </div>
                    </div>
                <?php
                    // Calculate total for this order
                    $total += $product['product_price'] * $product['product_quantity'];

                endforeach; ?>


                <div class="productCal">
                    <div class="orderInfo">
                        <input readonly type="text" value="Order date: <?= $orderInfo['order_date'] ?> Order BY: <?= $orderInfo['user_id'] ?>[<?= $orderInfo['user_name'] ?>]" placeholder="info">
                    </div>
                    <div class="total">
                        <p>Order Total:</p>
                        <input readonly type="text" value="RM <?= $total ?>" placeholder="Total">

                    </div>
                </div>
            </div>
        <?php endforeach; ?>
    </div>
    </div>


</body>

<div class="modelwindows" id="modelwindows">
    <form action="" method="post" class="modelAddress">
        <div class="modelherder">
            <p>
                Shipping Detail
            </p>
            <a id="closemodal" class="closemodal">
                <img src="https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-close-round-512.png" alt="close">
            </a>
        </div>
        <div class="addressConainer">
            <div class="form-group">
                <div class="receiver">
                    <label for="receivername">Shipping Company</label>
                    <select name="shippingCompany" id="shippingCompany">
                        <?php
                        foreach ($shippingCompanies as $key => $company) {
                            $selected = ($key === $recordsearchExit['shipping_company']) ? 'selected' : '';
                            echo "<option value='$key' $selected >$company</option>";
                        }
                        ?>
                    </select>
                    <label for="receiverphone">Shipping ref Code</label>

                    <input readonly type="text" placeholder="ref code" id="ref_code" name="ref_code" value="<?= $recordsearchExit['shipping_pacel_ref'] ?>" disabled>

                </div>

            </div>
            <div class="modelbutton">
                <button>Cancel</button>
                <button type="submit" name="shipping">Submit</button>
            </div>

        </div>
    </form>
</div>
<script>
    window.onload = function() {
        var getCountElement = document.getElementById('ordercount');
        var hisContainer = document.getElementById('hisContainer');
        var notthing = document.getElementById('notthing');
        var textValue = getCountElement.value;
        var marginAdjust = 300 - (textValue * 30);
        console.log(marginAdjust);
        if (textValue < 3) {
            hisContainer.style.marginBottom = marginAdjust + "px";
        }
        if (textValue == 0) {
            notthing.style.display = "flex";
        }

    };
    const openModals = document.querySelectorAll('.openmodal');
    const closeButtons = document.querySelectorAll('.closemodal');
    var modal = document.getElementById("modelwindows");
    let orderID = "<?php echo $orderIDModal; ?>";
    if (orderID) {

        openModal(); // Open modal if orderID exists
    }

    function openModal() {
        modal.style.display = "block";
    }
    openModals.forEach(function(openModal) {
        openModal.addEventListener('click', function() {
            modal.style.display = "block";
        });
    });

    closeButtons.forEach(function(closeButton) {
        closeButton.addEventListener('click', function() {
            modal.style.display = "none";
        });
    });
</script>

</html>